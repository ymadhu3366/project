name: Helloworld
on:
  push:
    branches:
      - master
env:
  AWS_REGION: us-east-1
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ymadhu3366/hw:nodejs_demo_image

      - name: Docker Push
        run: |
          docker push ymadhu3366/hw:nodejs_demo_image

  ecsdeploy:
    needs: deploy
    name: ecsdeploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-ecs
    steps:

    - name: Checkout Repository
      uses: actions/checkout@master

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.6

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      continue-on-error: true
